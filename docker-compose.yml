# used for local

version: '3.4'
services:
  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data
    networks:
      - mimir-cluster

  grafana:
    image: grafana/grafana:latest
    pull_policy: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    volumes:
      - ./config/local/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./config/local/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
      # Explicitly list the dashboards we want to show in the demo. We intentionally exclude dashboards that require
      # Kubernetes metrics (eg. resources or networking) and other services not available in the demo (eg. Grafana Loki).
      - ./operations/mimir-mixin-compiled/dashboards/mimir-alertmanager.json:/var/lib/grafana/dashboards/mimir-alertmanager.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-compactor.json:/var/lib/grafana/dashboards/mimir-compactor.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-object-store.json:/var/lib/grafana/dashboards/mimir-object-store.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-overrides.json:/var/lib/grafana/dashboards/mimir-overrides.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-queries.json:/var/lib/grafana/dashboards/mimir-queries.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-reads.json:/var/lib/grafana/dashboards/mimir-reads.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-ruler.json:/var/lib/grafana/dashboards/mimir-ruler.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-tenants.json:/var/lib/grafana/dashboards/mimir-tenants.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-top-tenants.json:/var/lib/grafana/dashboards/mimir-top-tenants.json:ro
      - ./operations/mimir-mixin-compiled/dashboards/mimir-writes.json:/var/lib/grafana/dashboards/mimir-writes.json:ro
    ports:
      - 9000:3000
    networks:
      - mimir-cluster

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/local/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./operations/mimir-mixin-compiled/rules.yaml:/etc/prometheus/rules.yaml
    depends_on:
      - "distributor-1"
      - "distributor-2"
      - "ingester-1"
      - "ingester-2"
      - "ingester-3"
      - "querier"
      - "query-frontend"
      - "store-gateway"
      - "compactor"
    ports:
      - 9091:9090
    networks:
      - mimir-cluster

  load-balancer:
    image: nginx:latest
    platform: linux/amd64
    volumes:
      - ./config/local/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "distributor-1"
      - "distributor-2"
    ports:
      - 9009:9009
    networks:
      - mimir-cluster

  query-frontend:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=query-frontend"]
    hostname: query-frontend
    depends_on:
      - querier
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - query-frontend-data:/data
    ports:
      - 9010:8080
    networks:
      - mimir-cluster

  querier:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=querier"]
    hostname: querier
    depends_on:
      - store-gateway
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - querier-data:/data
    ports:
      - 9011:8080
    networks:
      - mimir-cluster

  distributor-1:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=distributor"]
    hostname: distributor-1
    depends_on:
      - ingester-1
      - ingester-2
      - ingester-3
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - distributor-1-data:/data
    networks:
      - mimir-cluster

  distributor-2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=distributor"]
    hostname: distributor-2
    depends_on:
      - ingester-1
      - ingester-2
      - ingester-3
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - distributor-2-data:/data
    networks:
      - mimir-cluster

  ingester-1:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=ingester"]
    hostname: ingester-1
    depends_on:
      - minio
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - ingester-1-data:/data
    ports:
      - 9012:8080
    networks:
      - mimir-cluster

  ingester-2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=ingester"]
    hostname: ingester-2
    depends_on:
      - minio
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - ingester-2-data:/data
    ports:
      - 9013:8080
    networks:
      - mimir-cluster

  ingester-3:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=ingester"]
    hostname: ingester-3
    depends_on:
      - minio
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - ingester-3-data:/data
    ports:
      - 9014:8080
    networks:
      - mimir-cluster

  compactor:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=compactor"]
    hostname: compactor
    depends_on:
      - minio
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - compactor-data:/data
    ports:
      - 9015:8080
    networks:
      - mimir-cluster

  store-gateway:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml","-target=store-gateway"]
    hostname: store-gateway
    depends_on:
      - minio
    volumes:
      - ./config/local/mimir.yaml:/etc/mimir.yaml
      - store-gateway-data:/data
    ports:
      - 9016:8080
    networks:
      - mimir-cluster

volumes:
  distributor-1-data:
  distributor-2-data:
  ingester-1-data:
  ingester-2-data:
  ingester-3-data:
  querier-data:
  query-frontend-data:
  compactor-data:
  store-gateway-data:
  minio-data:

networks:
  mimir-cluster:
    driver: bridge
